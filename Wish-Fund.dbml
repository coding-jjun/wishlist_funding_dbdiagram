Table Account {
  accId integer [pk]
  bank  enum [not null]
  accNum string [not null]
}

Table Address {
  addrId integer [pk, unique]
  userId integer [ref: > User.userId]
  addrRoad varchar [not null]
  addrDetl varchar [not null]
  addrZip varchar [not null]
  addrNick varchar [not null]
  recvName varchar [not null]
  recvPhone varchar [not null]
  recvReq varchar
  isDef bool [default: false]
}

Table Comment {
  comId integer [pk]
  fundId integer [not null, ref: > Funding.fundId]
  authorId integer [not null, ref: > User.userId]
  content varchar [not null]
  regAt timestamp
  isMod bool [not null, default: false]
  isDel bool [not null, default: false]
}

Table Donation {
  donId integer [pk, unique]
  fundId integer [ref: > Funding.fundId]
  userId integer [ref: > User.userId]
  donStat enum [not null]
  orderId varchar [not null, unique] // 비회원이 후원한 경우 주문번호(order id)를 통해서 자신의 후원 정보를 볼 수 있어야 하기 때문.
  donAmnt integer [not null, default: 0]
  regAt timestamp
  delAt timestamp
}

Table Error {
  errId integer [pk]
  method varchar [not null]
  url varchar [not null]
  agent varchar [not null]
  ip varchar [not null]
  parameters varchar [not null]
  httpCode varchar [not null]
  errCode varchar
  errName varchar [not null]
  errStack varchar [not null]
  regAt time글
}

Enum ReqType {
  NotResponse // 00 // 요청에 응답하지 않은 상태
  Accept // 01 // 요청을 수락한 상태
  Refuse // 02 // 요청을 거절한 상태
  UnWritten // 03 // 감사인사를 작성하지 않은 상태
  Written // 04 // 감사인사를 작성한 상태
}

Enum NewsType {
  NewFunding // 친구의 새로운 펀딩 개설
  DueFunding // 친구의 펀딩 마감기한 임박
  Gratitude // 친구의 펀딩 감사인사
}
